version: 2.1
workflows:
   workflow:
      jobs:
         - hello
         - install
         - prettyfy:
            requires:
               - install
         - tests:
            requires:
               - install
         - database:
            requires:
               - install
jobs:
   hello:
      docker: 
         - image: cimg/node:14.10.1
      steps:
         - checkout
         - run: "echo Hello"
   install:
       docker: 
         - image: cimg/node:14.10.1
       steps:
          - checkout
          - restore_cache:
              key: yarn-packages-{{ checksum "yarn.lock" }}
          - run: yarn global add node-gyp && yarn install
          - save_cache:
              key: yarn-packages-{{ checksum "yarn.lock" }}
              paths:
                - ./node_modules
   prettyfy:
      docker: 
         - image: cimg/node:14.10.1
      steps:
          - checkout
          - restore_cache:
             key: yarn-packages-{{ checksum "yarn.lock" }}
          - run: yarn lint && yarn format:check
          - save_cache:
              key: yarn-packages-{{ checksum "yarn.lock" }}
              paths:
                - ./node_modules
   tests:
      docker: 
         - image: cimg/node:14.10.1
      steps:
          - checkout
          - restore_cache:
             key: yarn-packages-{{ checksum "yarn.lock" }}
          - run: yarn test:ci
          - save_cache:
              key: yarn-packages-{{ checksum "yarn.lock" }}
              paths:
                - ./node_modules
   database:
      docker:
         - image: cimg/node:14.10.1
           auth:
              username: thaisrevillon
              password: monMotdePasseCPasça
           environment:
              DATABASE_URL: postgres://psqluer:psqlpassword@localhost:5432/psdb
              JWT_SECRET: blah blah blah
              API_PORT: 3000
              API_HOST: localhost
              API_PROTOCOL: http
         - image: 'circleci/postgres:9.6.2-alpine'
           auth:
              username: thaisrevillon
              password: monMotdePasseCPasça
           environment:
              POSTGRES_USER: psqluer
              POSTGRES_PASSWORD: psqlpassword
              POSTGRES_DB: psdb
      steps:
         - checkout
         - restore_cache:
            key: yarn-packages-{{ checksum "yarn.lock" }}
